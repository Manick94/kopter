<?php


 /**
  * Track Value Object.
  * This class is value object representing database table kopterGameSession
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */




class Track {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    var $sessionId;
    var $ip;
    var $startDate;
    var $endDate;
    var $longitude;
    var $latitude;
    var $version;
    var $unity3dversion;
    var $hostname;
    var $os;
    var $platform;
    var $resolution;
    var $graphicCard;
    var $cpu;
    var $deviceModel;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    function Track () {

    }

    /* function Track ($sessionIdIn) {

          $this->sessionId = $sessionIdIn;

    } */


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    function getSessionId() {
          return $this->sessionId;
    }
    function setSessionId($sessionIdIn) {
          $this->sessionId = $sessionIdIn;
    }

    function getIp() {
          return $this->ip;
    }
    function setIp($ipIn) {
          $this->ip = $ipIn;
    }

    function getStartDate() {
          return $this->startDate;
    }
    function setStartDate($startDateIn) {
          $this->startDate = $startDateIn;
    }

    function getEndDate() {
          return $this->endDate;
    }
    function setEndDate($endDateIn) {
          $this->endDate = $endDateIn;
    }

    function getLongitude() {
          return $this->longitude;
    }
    function setLongitude($longitudeIn) {
          $this->longitude = $longitudeIn;
    }

    function getLatitude() {
          return $this->latitude;
    }
    function setLatitude($latitudeIn) {
          $this->latitude = $latitudeIn;
    }

    function getVersion() {
          return $this->version;
    }
    function setVersion($versionIn) {
          $this->version = $versionIn;
    }

    function getUnity3dversion() {
          return $this->unity3dversion;
    }
    function setUnity3dversion($unity3dversionIn) {
          $this->unity3dversion = $unity3dversionIn;
    }

    function getHostname() {
          return $this->hostname;
    }
    function setHostname($hostnameIn) {
          $this->hostname = $hostnameIn;
    }

    function getOs() {
          return $this->os;
    }
    function setOs($osIn) {
          $this->os = $osIn;
    }

    function getPlatform() {
          return $this->platform;
    }
    function setPlatform($platformIn) {
          $this->platform = $platformIn;
    }

    function getResolution() {
          return $this->resolution;
    }
    function setResolution($resolutionIn) {
          $this->resolution = $resolutionIn;
    }

    function getGraphicCard() {
          return $this->graphicCard;
    }
    function setGraphicCard($graphicCardIn) {
          $this->graphicCard = $graphicCardIn;
    }

    function getCpu() {
          return $this->cpu;
    }
    function setCpu($cpuIn) {
          $this->cpu = $cpuIn;
    }

    function getDeviceModel() {
          return $this->deviceModel;
    }
    function setDeviceModel($deviceModelIn) {
          $this->deviceModel = $deviceModelIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    function setAll($sessionIdIn,
          $ipIn,
          $startDateIn,
          $endDateIn,
          $longitudeIn,
          $latitudeIn,
          $versionIn,
          $unity3dversionIn,
          $hostnameIn,
          $osIn,
          $platformIn,
          $resolutionIn,
          $graphicCardIn,
          $cpuIn,
          $deviceModelIn) {
          $this->sessionId = $sessionIdIn;
          $this->ip = $ipIn;
          $this->startDate = $startDateIn;
          $this->endDate = $endDateIn;
          $this->longitude = $longitudeIn;
          $this->latitude = $latitudeIn;
          $this->version = $versionIn;
          $this->unity3dversion = $unity3dversionIn;
          $this->hostname = $hostnameIn;
          $this->os = $osIn;
          $this->platform = $platformIn;
          $this->resolution = $resolutionIn;
          $this->graphicCard = $graphicCardIn;
          $this->cpu = $cpuIn;
          $this->deviceModel = $deviceModelIn;
    }


    /** 
     * hasEqualMapping-method will compare two Track instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    function hasEqualMapping($valueObject) {

          if ($valueObject->getSessionId() != $this->sessionId) {
                    return(false);
          }
          if ($valueObject->getIp() != $this->ip) {
                    return(false);
          }
          if ($valueObject->getStartDate() != $this->startDate) {
                    return(false);
          }
          if ($valueObject->getEndDate() != $this->endDate) {
                    return(false);
          }
          if ($valueObject->getLongitude() != $this->longitude) {
                    return(false);
          }
          if ($valueObject->getLatitude() != $this->latitude) {
                    return(false);
          }
          if ($valueObject->getVersion() != $this->version) {
                    return(false);
          }
          if ($valueObject->getUnity3dversion() != $this->unity3dversion) {
                    return(false);
          }
          if ($valueObject->getHostname() != $this->hostname) {
                    return(false);
          }
          if ($valueObject->getOs() != $this->os) {
                    return(false);
          }
          if ($valueObject->getPlatform() != $this->platform) {
                    return(false);
          }
          if ($valueObject->getResolution() != $this->resolution) {
                    return(false);
          }
          if ($valueObject->getGraphicCard() != $this->graphicCard) {
                    return(false);
          }
          if ($valueObject->getCpu() != $this->cpu) {
                    return(false);
          }
          if ($valueObject->getDeviceModel() != $this->deviceModel) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    function toString() {
        $out = $this->getDaogenVersion();
        $out = $out."\nclass Track, mapping to table kopterGameSession\n";
        $out = $out."Persistent attributes: \n"; 
        $out = $out."sessionId = ".$this->sessionId."\n"; 
        $out = $out."ip = ".$this->ip."\n"; 
        $out = $out."startDate = ".$this->startDate."\n"; 
        $out = $out."endDate = ".$this->endDate."\n"; 
        $out = $out."longitude = ".$this->longitude."\n"; 
        $out = $out."latitude = ".$this->latitude."\n"; 
        $out = $out."version = ".$this->version."\n"; 
        $out = $out."unity3dversion = ".$this->unity3dversion."\n"; 
        $out = $out."hostname = ".$this->hostname."\n"; 
        $out = $out."os = ".$this->os."\n"; 
        $out = $out."platform = ".$this->platform."\n"; 
        $out = $out."resolution = ".$this->resolution."\n"; 
        $out = $out."graphicCard = ".$this->graphicCard."\n"; 
        $out = $out."cpu = ".$this->cpu."\n"; 
        $out = $out."deviceModel = ".$this->deviceModel."\n"; 
        return $out;
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    function cloneobj() {
        $cloned = new Track();

        $cloned->setSessionId($this->sessionId); 
        $cloned->setIp($this->ip); 
        $cloned->setStartDate($this->startDate); 
        $cloned->setEndDate($this->endDate); 
        $cloned->setLongitude($this->longitude); 
        $cloned->setLatitude($this->latitude); 
        $cloned->setVersion($this->version); 
        $cloned->setUnity3dversion($this->unity3dversion); 
        $cloned->setHostname($this->hostname); 
        $cloned->setOs($this->os); 
        $cloned->setPlatform($this->platform); 
        $cloned->setResolution($this->resolution); 
        $cloned->setGraphicCard($this->graphicCard); 
        $cloned->setCpu($this->cpu); 
        $cloned->setDeviceModel($this->deviceModel); 

        return $cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    function getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}

?>